type Token @entity {
  id: ID!
  owner: Owner
  name: String
  imageURI: String
  uri: String
  expires: BigInt,
  transfers: [Transfer!]! @derivedFrom(field: "token")
  contract: GoodContract
}

type Owner @entity {
  id: ID!
  ownedTokens: [Token!] @derivedFrom(field: "owner")
}

type GoodContract @entity {
  id: ID!
  name: String! @index
  symbol: String!
  totalSupply: BigInt!
  tokens: [Token!]! @derivedFrom(field: "contract")
  numberField: BigInt
}

type BadContract @entity {
  id: ID!
  name: String! @index
  symbol: String!
  totalSupply: BigInt!
  # tokens: [Token!]! @derivedFrom(field: "contract")
  customField: String
}

union Contract = GoodContract | BadContract


type Transfer @entity {
  id: ID!
  token: Token!
  from: Owner
  to: Owner
  timestamp: BigInt!
  block: Int! @index
  transactionHash: String!
}